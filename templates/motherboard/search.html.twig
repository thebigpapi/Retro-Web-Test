{% extends 'base.html.twig' %}

{% form_theme form _self %}

{% block checkbox_widget %}
        {% set type = type|default('checkbox') %}
        <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}>
{% endblock %}

{% block hidden_widget %}
        {% set type = type|default('hidden') %}
        <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}>
{% endblock %}

{% block title %}{% trans %}Search for a motherboard{% endtrans %}{% endblock %}

{% block body %}
	<h2 class="title">{% trans %}Search for a motherboard{% endtrans %}</h2>

	<p style="text-align:center;">{% trans %}List motherboards whose the manufacturer starting with:{% endtrans %}<br>
		{% for letter in ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']%}
		<a href="./index/{{letter}}">{{letter}}</a>&nbsp;|
		{% endfor %}
		<a href="./result/?manufacturerId=NULL">?</a>
	</p>
    <div id="hiddenDiv" style="display: none;"></div>
	<form name="search_motherboard" method="post" action="./search">
        <table>
            <tr style="line-height: 200%;">
                <th>{{ form_label(form.manufacturer) }}</th>
                <td class="table-width" rowspan="13"></td>
                <td>
                    <div class="sform">{{ form_widget(form.manufacturer) }}</div>
                </td>
            </tr>
            <tr style="line-height: 200%;">
                <th>{{ form_label(form.name) }}</th>
                <td>
                    <div class="sform">{{ form_widget(form.name)|replace({' />': ' size="50">'})|raw }}</div> 
                </td>
            </tr>
            <tr style="line-height: 200%;">
                <th>{{ form_label(form.formFactor) }}</th>
				<td>
                    <div class="sform">{{ form_widget(form.formFactor) }}</div>
                </td>
            </tr>
            <tr style="line-height: 200%;">
                <th>{{ form_label(form.chipsetManufacturer) }}</th>
				<td>
                    <div class="sform">{{ form_widget(form.chipsetManufacturer) }}</div>
                </td>
                <td>
                    <div class="butn">
                        {{ form_row(form.searchChipsetManufacturer)|replace({'<div><button': '<input', '</button></div>': '">', '>': ' value="'})|raw }}
                    </div>
                </td>
            </tr>
            <tr style="line-height: 200%;  ">
                <th>{{ form_label(form.chipset) }}</th>
                <td>
                    <div id="chipset_div" class="sform">{{ form_widget(form.chipset) }}</div>
                </td>
            </tr>
            <tr style="line-height: 100%;">
                <th>{{ form_label(form.processorPlatformType) }}</th>
				<td>
                    <div class="sform">{{ form_widget(form.processorPlatformType) }}</div>
                </td>
            </tr>
			<tr style="height:10px;"><td></td><td></td></tr>
            <tr>
                <th>{% trans %}Expansion slots{% endtrans %}</th>
                <td>
                    {% for slot in slots %}
                        <span class="field1">
							<input type="text" size="2" name="slot{{slot.id}}">
							<span>x {{ slot.name }}</span>
                        </span>
                    {% endfor %}
                </td>
            </tr>
			<tr style="height:10px;"><td></td><td></td></tr>
			<tr>
                <th>{% trans %}I/O ports{% endtrans %}</th>
                <td>
                    {% for port in ports %}
                        <span class="field1">
							<input type="text" size="2" name="port{{port.id}}">
							<span>x {{ port.name }}</span>
						</span>
                    {% endfor %}
                </td>
            </tr>
			<tr style="height:10px;"><td></td><td></td></tr>
            <tr>
                <th>{% trans %}Ram type{% endtrans %}</th>
                 <td>
                    {% for child in form.dramType|keys %}
                        <span class="field2" >
						{{ form_widget(attribute(form.dramType,child)) }}
						{{ form_label(attribute(form.dramType,child)) }}
						</span>
                    {% endfor %}
                </td> 
            </tr>
			<tr style="height:10px;"><td></td><td></td></tr>
            <tr>
                <th>{% trans %}Motherboard bios{% endtrans %}</th>
                <td>
				<div style="width:100%;">
				
					{% for child in form.motherboardBios|keys %}
                        <span class="field2">
						{{ form_widget(attribute(form.motherboardBios,child)) }}
						{{ form_label(attribute(form.motherboardBios,child)) }}
						</span>
                    {% endfor %}
					</div>
                </td>
            </tr>
        </table>
		<div class="butn">
            {{ form_row(form.search)|replace({'<div><button': '<input', '</button></div>': '">', '>': ' value="'})|raw }}{{ form_rest(form) }}
        </div>
   </form><br>
   
<script type="text/javascript">
function setChipset() {
        var chipManuf = document.getElementById("search_motherboard_chipsetManufacturer");
        var form = document.getElementsByName("search_motherboard")[0];
        var data = {};
        data[chipManuf.name] = chipManuf.value;
        xhttp.onreadystatechange = function() {
            //alert(xhttp.status + " " + xhttp.readyState + " " + xhttp.responseText);
            if (xhttp.readyState == 4 && xhttp.status == 200) {
                //console.log(this.responseText);
                //alert(this.responseText);
                /*if(window.DOMParser){
                    var parser = new DOMParser();
                    var doc = parser.parseFromString(xhttp.responseText, "text/html");
                }
                else if(window.ActiveXObject){
                    var parser = new ActiveXObject("Microsoft.XMLDOM");
                    parser.async = false;
                    // is there another way to do this load? 
                    var doc = parser.loadXML(xhttp.responseText);
                    
                    alert(parser.parseError.reason);
                }
                alert(doc);
                document.getElementById('search_motherboard_chipset').innerHTML = doc.getElementById('search_motherboard_chipset').innerHTML;*/

                //var parser = document.createElement( 'div' );
                var currentForm = document.getElementById('chipset_div');
                var parser = document.getElementById('hiddenDiv');
                //console.log();
                parser.innerHTML = xhttp.responseText;
                //console.log();
                var doc = document.getElementById('chipset_div');//parser.childNodes[15].childNodes[1].childNodes[5][5];
                //console.log(doc);
                //doc.id="vieux";
                //var newdiv = document.createElement("div");
                //newdiv.innerHTML = doc.innerHTML;
                //alert(currentForm.innerHTML);
                currentForm.innerHTML =  doc.innerHTML;

                parser.innerHTML="";
                alert(currentForm.innerHTML);
                /*alert('<OPTION value="">' +newdiv.innerHTML);
                alert('<OPTION value="">' +newdiv.innerHTML);*/
                //var doc = parser.children[1].children[1].children[0].children[2].children[0].children[0].children[4].children[1].children[0].children[0];
                
            }
        };
        var chipsetManufacturer = chipManuf.value;
        //var params = new FormData();
        var params = "search_motherboard[chipsetManufacturer]="+chipsetManufacturer;
        //params.set('search_motherboard[chipsetManufacturer]',chipsetManufacturer);
        //console.log(params);
        xhttp.open('POST', form.action, true);
        xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        xhttp.send(params);
    }
    if (window.XMLHttpRequest)
        var xhttp = new XMLHttpRequest();
    else if (window.ActiveXObject)
        var xhttp = new ActiveXObject("Microsoft.XMLHTTP");
    if (xhttp) { 
        var chipBtn = document.getElementById('search_motherboard_searchChipsetManufacturer');
        chipBtn.setAttribute("style", "display:none");
    }
    var chip = document.getElementById('search_motherboard_chipsetManufacturer');
    function addEvent(evnt, elem, func){
        if(elem.addEventListener)
            elem.addEventListener(evnt,func,false);
        else if(elem.attachEvent) {
            elem.attachEvent("on"+evnt,func);
        }
        else elem["on"+evnt] = func;
    }
    //addEvent("change", chip, "setChipset()");
    //chip.setAttribute("onchange", "setChipset()");
    chip.onchange= function() {setChipset();};
</script>
{% endblock %}

