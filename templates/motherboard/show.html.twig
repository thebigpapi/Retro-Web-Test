{% extends 'base.html.twig' %}
{% from 'macros/largeFile.html.twig' import link as driverLink %}
{% from 'macros/largeFile.html.twig' import header as driverHeader %}


{% block title %}
	{% if motherboard.getManufacturer() is not null %}
		{{ motherboard.getManufacturer().getShortNameIfExist() }}
	{% else %}
		{% trans %}Unknown{% endtrans %}
	{% endif %}
	{{ motherboard.getName() }}
{% endblock %}

{% block metatags %}
	<meta name="description" content="{% if motherboard.getManufacturer() is not null %}{{ motherboard.getManufacturer().getShortNameIfExist() }}{% else %}Unknown{% endif %} {{ motherboard.getName() }} BIOS/manuals/jumper settings{% if motherboard.getChipset() is not null %} , {% if motherboard.getChipset().getManufacturer() is not null %}{{ motherboard.getChipset().getManufacturer().getShortNameIfExist() }}{% endif %} {% if motherboard.getChipset().getPartNo() is not null %} {{ motherboard.getChipset().getPartNo() }}{% else %}Unidentified{% endif %}{% endif %} {% if motherboard.getCpuSockets() is not empty %}, {% for socket in motherboard.getCpuSockets() %}{% if socket.getName() is null %}{{ socket.getNameAndType}}{% else %}{{ socket.getName}}{% endif %}{% if not loop.last %}/{% endif %}{% endfor %} {% elseif motherboard.getProcessorPlatformTypes() is not empty %}, {% for platform in motherboard.getProcessorPlatformTypes() %}{{ platform.getName() }}{% if not loop.last %}/{% endif %}{% endfor %}{% endif %} {% if motherboard.getMotherboardBios() is not empty %} {% for bios in motherboard.getMotherboardBios()|sort((a, b) => b.postString <=> a.postString)|sort((a, b) => b.boardVersion <=> a.boardVersion) %} {% if bios.postString() is not empty %} {% if loop.first %}, {{ bios.getPostString() }}{% endif %}{% if loop.index == 2 %},{{ bios.getPostString() }}{% endif %}{% endif %}{% endfor %} {% elseif motherboard.getFormFactor() is not null %}, {{ motherboard.getFormFactor().getName() }} {% else %}, Form factor: Unknown{% endif %}| UH19">
{% endblock %}

{% block opengraph %}
	<meta property="og:site_name" content="Ultimate Retro">
	{% apply spaceless %}
	{% if motherboard.getImages() is not empty %}
		{% for image in motherboard.getImages()|sort((a, b) => b.motherboardImageType <=> a.motherboardImageType) %}
			{% if image.motherboardImageType.id in [1, 2] %}
				<meta property="og:image" content="{{ vich_uploader_asset(image, 'imageFile')}}">
			{% endif %}
		{% endfor %}
	{% endif %}
	{% if motherboard.getManufacturer() is not null %}
		<meta property="og:title" content="{{ motherboard.getManufacturer().getShortNameIfExist() }} {{ motherboard.getName() }}">
	{% else %}
		<meta property="og:title" content="Unknown {{ motherboard.getName() }}">
	{% endif %}
	{% if motherboard.getManuals() is not null %}
		{% if motherboard.getMotherboardBios() is not null %}
			<meta property="og:description" content="Get manual, bios and more for the {{ motherboard.name }}!">
		{% else %}
			<meta property="og:description" content="Get manual and more for the {{ motherboard.name }}!">
		{% endif %}
	{% else %}
		{% if motherboard.getMotherboardBios() %}
			<meta property="og:description" content="Get bios and more for the {{ motherboard.name }}!">
		{% endif %}
	{% endif %}
	{% endapply %}
	<script src="{{ absolute_url(asset('assets/highslide/highslide.js')) }}"></script>
	<script>
	// HIGHSLIDE JS
	if (hs.addSlideshow) hs.addSlideshow({
		slideshowGroup: 'images',
		repeat: false,
		useControls: true,
		fixedControls: 'fit',
		overlayOptions: {opacity: 1,position: 'top right',hideOnMouseOut: true}
	});
	</script>
{% endblock %}

{% block body %}
<div class="title">
	<b>
		{% if motherboard.getManufacturer() is not null %}
			{{ motherboard.getManufacturer().getShortNameIfExist() }}
		{% else %}
			Unknown
		{% endif %}
		{{ motherboard.getName() }}
	</b>
</div>
{% if motherboard.getMotherboardAliases() is not empty %}
	<p class="string-alias">
		<b>
			<span class="text-block" style="border: none; padding-right: 0;">{% trans %}Also known as:{% endtrans %}</span>
			{% for alias in motherboard.getMotherboardAliases() %}
				<span class="text-block" {% if alias.getManufacturer() is not null %}>{{ alias.getManufacturer().getShortNameIfExist() }}
				{% else %}
					>Unknown
				{% endif %}
				{{ alias.getName() }}</span>
			{% if not loop.last %}
				<span class="separator">&nbsp;|&nbsp;</span>
			{% endif %}
		{% endfor %}
	</p>
</b></p>{% endif %}
<div class="show-images" id="sh-images">
{% if motherboard.getImages() is not empty %}
	<div class="ie-fix">
	{% for image in motherboard.getImages()|sort((a, b) => a.motherboardImageType <=> b.motherboardImageType) %}
		<div class="show-image">
				<a href="{{ vich_uploader_asset(image, 'imageFile')}}" class="highslide" onclick="return hs.expand(this, { slideshowGroup: 'images' });">
					<img src="{% if vich_uploader_asset(image, 'imageFile') | ext != "svg" %}
					{{ vich_uploader_asset(image, 'imageFile') | imagine_filter('motherboard_show_thumb') }}{% else %}
					{{ vich_uploader_asset(image, 'imageFile')}}{% endif %}" alt="" title="{% if image.description %}{{ image.description }}{% endif %}">
				</a>
			{% if image.creditor %}
				<span class="creditor">
					{% if image.creditor.website %}
						<a href="{{ image.creditor.website }}">{% trans %}Image by{% endtrans %}
							{{ image.creditor.name }}</a>
					{% else %}
						{% trans %}Image by{% endtrans %}
						{{ image.creditor.name }}
					{% endif %}
				</span>
			{% endif %}
			<div class="highslide-caption">
				{% if image.description %}{{ image.description }}{% endif %}
			</div>
		</div>
	{% endfor %}
	</div>
{% else %}&nbsp;{% endif %}
</div>
<div class="show-nav" id="sh-nav">
	<a class="snav" onclick="show_gen()">
		<img src="{{ absolute_url(asset('assets/images/data.svg')) }}" alt="" width="16" height="16" style="vertical-align: middle;padding-right:2px;">General</a>
	<a class="snav" onclick="show_dw()">
		<img src="{{ absolute_url(asset('assets/images/dw.svg')) }}" alt="" width="16" height="16" style="vertical-align: middle;padding-right:2px;">Downloads</a>
	<a class="snav" onclick="show_cpu()">
		<img src="{{ absolute_url(asset('assets/images/cpu.svg')) }}" alt="" width="16" height="16" style="vertical-align: middle;padding-right:2px;">CPUs</a>
	<div><b class="contrib">{% trans %}Would you like to improve this page? Click{% endtrans %}
	<a href="{% if is_granted('ROLE_ADMIN') %}{{ path('new_motherboard_edit', {id: motherboard.getId()}) }}{% else %}https://discord.gg/HWWH7hsk2p{% endif %}">
	{% trans %}here{% endtrans %}</a>.</b></div>
</div>
<div class="show-general" id="sh-general">
	<table class="stbl">
		<tr>
			<td>
				<div style="width:170px;">{% trans %}Form factor:{% endtrans %}</div>
			</td>
			<td style="width: 100%;">
				{% if motherboard.getFormFactor() is not null %}
					{{ motherboard.getFormFactor().getName() }}
				{% else %}
					{% trans %}Unknown{% endtrans %}
				{% endif %}
			</td>
		</tr>
	{% if motherboard.getPsuConnectors() is not empty %}
		<tr>
			<td>{% trans %}PSU connector{% endtrans %}:</td>
			<td>
				{% for psu in motherboard.getPsuConnectors() %}
					{{ psu.getName() }}{% if not loop.last %}, {% endif %}
				{% endfor %}
			</td>
		</tr>
	{% endif %}
	{% if motherboard.getChipset() is not null %}
		<tr>
			<td>{% trans %}Chipset{% endtrans %}:</td>
			<td>
				{% if motherboard.getChipset().getEncyclopediaLink() is not null %}
					<a href="{{ motherboard.getChipset().getEncyclopediaLink() }}">
						{{ motherboard.getChipset().getMainChipWithManufacturer() }}
					</a>
				{% else %}
					{{ motherboard.getChipset().getMainChipWithManufacturer() }}
				{% endif %}
			</td>
		</tr>
	{% endif %}
	{% if motherboard.getDimensions() is not null %}
		<tr>
			<td>{% trans %}Dimensions:{% endtrans %}</td>
			<td>{{ motherboard.getDimensions() }}</td>
		</tr>
	{% endif %}
	{% if motherboard.getCpuSockets() or motherboard.getProcessorPlatformTypes() is not empty %}
		<tr>
			<td>{% trans %}CPU socket and platform{% endtrans %}:</td>
			<td>
				{% if motherboard.getCpuSockets() is not empty %}
					{% for socket in motherboard.getCpuSockets() %}
						<span class="text-block" style="background-color:#cae4fa;">{{ socket.getNameAndType}}</span>
					{% endfor %}
				{% endif %}
				{% if motherboard.getProcessorPlatformTypes() is not empty %}
					{% for platform in motherboard.getProcessorPlatformTypes() %}
						<span class="text-block" style="background-color:#fae9ca;">{{ platform.getName() }}</span>
					{% endfor %}
				{% endif %}
			</td>
		</tr>
	{% endif %}
	{% if motherboard.getCpuSpeed() is not empty %}
		<tr>
			<td>{% trans %}Supported FSB speeds:{% endtrans %}</td>
			<td>
				{% for frequency in motherboard.getCpuSpeed()|sort((a, b) => a.value <=> b.value) %}
					<span class="text-block" style="background-color:#d0faca;">{{ frequency.getValueWithUnit() }}</span>
				{% endfor %}
			</td>
		</tr>
	{% endif %}
	{% if motherboard.getMotherboardMaxRams() or motherboard.getDramType() is not empty %}
		<tr>
			<td>{% trans %}Supported RAM size and types{% endtrans %}:</td>
			<td>
				{% if motherboard.getMotherboardMaxRams() is not empty %}
					{% for maxRam in motherboard.getMotherboardMaxRams()|sort((a, b) => a.getMaxRam().getValue() <=> b.getMaxRam().getValue()) %}
						{% if maxRam.getMaxRam() is not null %}
							<span class="text-block" style="background-color:#cae4fa;"> 
							{% if maxRam.getMaxRam().getValue() > 1048575 %}
								{{ maxRam.getMaxRam().getValue() / 1048576 }}
								{% trans %}GB{% endtrans %}
							{% elseif maxRam.getMaxRam().getValue() > 1023 %}
								{{ maxRam.getMaxRam().getValue() / 1024 }}
								{% trans %}MB{% endtrans %}
							{% else %}
								{{ maxRam.getMaxRam().getValue() }}
								{% trans %}KB{% endtrans %}
							{% endif %}
							{% if maxRam.getNote() is not null %}
								({{ maxRam.getNote()}})
							{% endif %}
							</span>
						{% endif %}
					{% endfor %}
				{% endif %}
				{% if motherboard.getDramType() is not empty %}
					{% for dram in motherboard.getDramType() %}
						<span class="text-block" style="background-color:#fae9ca;">{{ dram.getName() }}</span>
					{% endfor %}
				{% endif %}
			</td>
		</tr>
	{% endif %}
	{% if motherboard.getCacheSize() is not empty %}
		<tr>
			<td>{% trans %}Cache:{% endtrans %}</td>
			<td>
			{% for cache in motherboard.getCacheSize()|sort((a, b) => a.value <=> b.value) %}
				<span class="text-block" style="background-color:#d0faca;">
				{% if cache.getValue() > 1048575 %}
					{{ cache.getValue() / 1048576 }}
					{% trans %}MB{% endtrans %}
				{% elseif cache.getValue() > 1023 %}
					{{ cache.getValue() / 1024}}
					{% trans %}KB{% endtrans %}
				{% else %}
					{{ cache.getValue()}}
					{% trans %}B{% endtrans %}
				{% endif %}
				</span>
			{% endfor %}
			</td>
		</tr>
	{% endif %}
	{% if motherboard.getVideoChipset() is not null %}<tr>
		<td>{% trans %}Video Chipset:{% endtrans %}</td>
		<td>{{ motherboard.getVideoChipset().getNameWithManufacturer() }}
		{% if  motherboard.getMaxVideoRam() is not null %}
			({{  motherboard.getMaxVideoRam().getValueWithUnit() }} max VRAM)
		{% endif %}</td>
	</tr>{% endif %}
	{% if motherboard.getAudioChipset() is not null %}<tr>
		<td>{% trans %}Audio Chipset:{% endtrans %}</td>
		<td>{{ motherboard.getAudioChipset().getNameWithManufacturer() }}</td>
	</tr>{% endif %}
	</table>
	<div class="scroll-div">
		<table class="stbl"><tr class="stbl-head2">
			<td><b>{% trans %}I/O ports:{% endtrans %}</b></td>
			<td><b>{% trans %}Expansion slots:{% endtrans %}</b></td>
			<td><b>{% trans %}Known issues:{% endtrans %}</b></td>
		</tr><tr>
			<td class="exp-table">{% if motherboard.getMotherboardIoPorts() is not empty %}
				<ul style="list-style-type: none;">
					{% for port in motherboard.getMotherboardIoPorts()|sort %}
						<li>
							<b>{{ port.getCount() }}x
							</b>
							{{ port.getIoPort().getName() }}</li>
					{% endfor %}
				</ul>{% else %}
				<p style="padding-left:45px;">N/A</p>{% endif %}
			</td>
			<td class="io-table">{% if motherboard.getMotherboardExpansionSlots() is not empty %}
				<ul style="list-style-type: none;">
					{% for slot in motherboard.getMotherboardExpansionSlots()|sort %}
						<li>
							<b>{{ slot.getCount() }}x
							</b>
							{{ slot.getExpansionSlot().getName() }}</li>
					{% endfor %}
				</ul>{% else %}
				<p style="padding-left:45px;">N/A</p>{% endif %}
			</td>
			<td class="exp-table">{% if motherboard.getKnownIssues() is not empty %}
				<ul style="list-style-type: none;">
					{% for issue in motherboard.getKnownIssues() %}
						<li>{{ issue.getName() }}</li>
					{% endfor %}
				</ul>{% else %}
				<p style="padding-left:45px;">N/A</p>{% endif %}
			</td>
		</tr></table>
	</div>
	{% if motherboard.note is not null %}
		<div style="padding-top:10px">
			<div><b>{% trans %}Notes:{% endtrans %}</b></div>
			<div class="notes">{% apply markdown_to_html %}{{ motherboard.note }}{% endapply %}</div>
		</div>
	{% endif %}
</div>
<div class="show-downloads" id="sh-downloads">
	<div class="scroll-div">
		<img src="{{ absolute_url(asset('assets/images/hardware.gif')) }}" alt="" style="vertical-align: middle;padding-bottom: 10px;">
		<span><b>{% trans %}Drivers:{% endtrans %} </b></span>
		{% if motherboard.getAllDrivers() is not empty %}
		<span>{{ motherboard.getAllDrivers.count() }}{% if motherboard.getAllDrivers.count() == 1 %} entry{% else %} entries{% endif %}</span>
		<table class="stbl">
			<tr class="stbl-head">{{ driverHeader() }}</tr>
			{% for driver in motherboard.getAllDrivers() %}{{ driverLink(driver.largeFile) }}{% endfor %}
		</table>
		{% else %}
		<span>not available</span>
		{% endif %}
	</div>
	<div class="scroll-div">
		<img src="{{ absolute_url(asset('assets/images/chip.gif')) }}" alt="" style="vertical-align: middle;padding-bottom: 10px;">
		<span><b>{% trans %}BIOS images:{% endtrans %} </b></span>
		{% if motherboard.getMotherboardBios() is not empty %}
			{% set bfile_cnt = 0 %}
			{% for bios in motherboard.getMotherboardBios() %}
				{% if bios.getFileName() is not null %}{% set bfile_cnt = bfile_cnt + 1 %}{% endif %}
			{% endfor %}
			{% if bfile_cnt > 1 %}
				<span>{{ bfile_cnt }} files</span>
			{% elseif bfile_cnt > 0 %}
				<span>{{ bfile_cnt }} file</span>
			{% else %}
				<span>no files available</span>
			{% endif %}
		{% else %}
		<span>not available</span>
		{% endif %}
		{% if motherboard.getMotherboardBios() is not empty %}
		<table class="stbl">
			<tr class="stbl-head">
				<th>{% trans %}Manuf.{% endtrans %}</th>
				<th>{% trans %}POST String{% endtrans %}</th>
				<th>{% trans %}Note{% endtrans %}</th>
				<th>{% trans %}Core Ver.{% endtrans %}</th>
				<th>{% trans %}BIOS Ver.{% endtrans %}</th>
			</tr>
			{% for bios in motherboard.getMotherboardBios()|sort((a, b) => b.boardVersion <=> a.boardVersion)|sort((a, b) => a.manufacturer <=> b.manufacturer) %}
			<tr style="text-align:center;border: 1px solid #e0e0e0;">
				<td>{{ bios.getManufacturer().getShortNameIfExist() }}</td>
				<td><span class="string-bios">{{ bios.getPostString() }}</span></td>
				<td><span>{{ bios.getNote() }}</span></td>
				<td>{{ bios.getCoreVersion() }}</td>
				<td>
				{% if bios.getFileName() is not null %}
					<a href="{{ vich_uploader_asset(bios, 'romFile') }}">
						<img src="{{ absolute_url(asset('assets/images/dw.svg')) }}" alt="" width="16" height="16" style="vertical-align: middle;">
						{% if bios.getBoardVersion() is not null %}
							{{ bios.getBoardVersion() }}
						{% else %}
							[unknown]
						{% endif %}
					</a>
				{% else %}
					{{ bios.getBoardVersion() }}
				{% endif %}</td>
			</tr>
			{% endfor %}
		</table>
		{% endif %}
	</div>
	<div class="scroll-div">
		<img src="{{ absolute_url(asset('assets/images/manual.gif')) }}" alt="" style="vertical-align: middle;padding-bottom: 10px;">
		<span><b>{% trans %}Manuals:{% endtrans %} </b></span>
		{% if motherboard.getManuals() is not empty %}
		<span>{{ motherboard.getManuals.count() }}{% if motherboard.getManuals.count() == 1 %} entry{% else %} entries{% endif %}</span>
		<table class="stbl">
			<tr>
				<td>
					
				</td>
				<td>
					<ul style="list-style-type: none;">{% for manual in motherboard.getManuals()|sort((a, b) => a.getLinkName <=> b.getLinkName) %}
						<li>
							<a href="{{ vich_uploader_asset(manual, 'manualFile') }}">
								<img src="{{ absolute_url(asset('assets/images/dw.svg')) }}" alt="" width="16" height="16" style="vertical-align: middle;">
								{{ manual.getLinkName() }}
							</a>
							({{ manual.getLanguage().getName()}})
						</li>
					{% endfor %}</ul>
				</td>
			</tr>
		</table>
		{% else %}
		<span>not available</span>
		{% endif %}
	</div>
</div>
<div class="show-cpus" id="sh-cpus">
		{% if motherboard.getProcessors() is not empty %}
			<b>{% trans %}Supported CPUs:{% endtrans %}</b>{% if motherboard.getMaxCpu() is not null %}({% trans %}max CPUs:{% endtrans %}{{ motherboard.getMaxCpu()}}){% endif %}
			<div class="scroll-div">
				<table class="stbl">
					<tr class="stbl-head">
						<th>Model</th>
						<th>Speed</th>
						<th>FSB</th>
						<th>Voltages</th>
						<th>L1 Cache</th>
						<th>L2 Cache</th>
						<th>L3 Cache</th>
						<th>Core</th>
						<th>Process</th>
						<th>TDP</th>
						{#<th>Part Number</th>#}
					</tr>
					{% for processor in motherboard.getSortedProcessors() %}
					<tr style="text-align:center;">
						<td>{{ processor.manufacturer.getShortNameIfExist() }}&nbsp;{{ processor.getName() }}</td>
						<td>{{ processor.speed.getValueWithUnit() }}</td>
						<td>{{ processor.fsb.getValueWithUnit() }}</td>
						<td>{{ processor.getVoltagesWithValue() }}</td>
						<td>{% if processor.l1 is not null %}
							{{ processor.l1.getValueWithUnit()}}
							{#{% if processor.l1CacheMethod is not null %}
								({{ processor.l1CacheMethod.getName()}})
							{% endif %}#}
						{% else %}
							-
						{% endif %}</td>
						<td>{% if processor.l2 is not null %}
							{{ processor.l2.getValueWithUnit()}}
							{#{% if processor.l2CacheRatio is not null %}
								({{ processor.l2CacheRatio.getName()}})
							{% endif %}#}
						{% else %}
							-
						{% endif %}</td>
						<td>{% if processor.l3 is not null %}
							{{ processor.l3.getValueWithUnit()}}
							{#{% if processor.l3CacheRatio is not null %}
								({{ processor.l3CacheRatio.getName()}})
							{% endif %}#}
						{% else %}
							-
						{% endif %}</td>
						<td>{% if processor.core is not null %}
							{{ processor.core }}
						{% else %}
							-
						{% endif %}</td>
						<td>{% if processor.processNode is not null %}
							{{ processor.processNode }}nm
						{% else %}
							-
						{% endif %}</td>
						<td>{% if processor.tdp is not null %}
							{{ processor.tdp }}W
						{% else %}
							-
						{% endif %}</td>
						{#<td>{{ processor.partNumber}}</td>#}</tr>
					{% endfor %}
				</table>
			</div>
		{% endif %}
		{% if motherboard.getCoprocessors() is not empty %}
			<b>{% trans %}Supported NPUs:{% endtrans %}</b>
			<div class="scroll-div">
				<table class="stbl">
					<tr class="stbl-head"><th>Model</th><th>Speed</th><th>FSB</th><th>Part Number</th></tr>
					{% for copro in motherboard.getCoprocessors()|sort((a, b) => a.getPartNumber() <=> b.getPartNumber()) %}<tr style="text-align:center;">
						<td>{{ copro.manufacturer.getShortNameIfExist() }}&nbsp;{{ copro.getName() }}</td>
						<td>{{ copro.speed.getValueWithUnit() }}</td>
						<td>{{ copro.fsb.getValueWithUnit() }}</td>
						<td>{{ copro.partNumber}}</td>
					</tr>
					{% endfor %}
				</table>
			</div>
		{% endif %}
</div>
{% if is_granted('ROLE_ADMIN') %}<a href="{{ path("motherboard_delete", {id: motherboard.getId()}) }}" style="color:#c40000" onclick="delEntry()">Delete</a>{% endif %}
<div style="width:100%;clear:left;"></div>
<script>
	//alert(window.location.href);
	var showgen = document.getElementById('sh-general');
	var showdw = document.getElementById('sh-downloads');
	var showcpu = document.getElementById('sh-cpus');
	var shownav = document.getElementById('sh-nav');
	function show_gen(){
		showgen.style.display = 'block';
		showdw.style.display = 'none';
		showcpu.style.display = 'none';
	}
	function show_dw(){
		showgen.style.display = 'none';
		showdw.style.display = 'block';
		showcpu.style.display = 'none';
	}
	function show_cpu(){
		showgen.style.display = 'none';
		showdw.style.display = 'none';
		showcpu.style.display = 'block';
	}
</script>
{% endblock %}